# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
- name: Install Google Cloud Agent for Compute Workloads
  include_tasks:
    file: install.yml
  tags: workload-agent

- name: Find the exact path of the installed agent executable
  ansible.builtin.shell:
    # Query the RPM database for the package and grep for the main executable
    # The '$' at the end ensures we get the main binary, not a helper script
    cmd: "rpm -ql google-cloud-workload-agent | grep '/bin/google-cloud-workload-agent$'"
  register: agent_exe_path
  changed_when: false
  ignore_errors: true
  tags: workload-agent
  # Only run this if the process is kicked off by Oracle-Toolkit Terraform
  when: is_terraform_run is defined and is_terraform_run == "true"

- name: Log workload agent installation
  ansible.builtin.shell:
    cmd: "{{ agent_exe_path.stdout }} logusage -s ACTION -a 5"
  register: log_result
  changed_when: false
  ignore_errors: true
  tags: workload-agent
  when:
    - is_terraform_run is defined
    - is_terraform_run == "true"
    - agent_exe_path.rc is defined
    - agent_exe_path.rc == 0
    - agent_exe_path.stdout is defined
    - agent_exe_path.stdout != ""

- name: Create a database user for the Google Cloud Agent for Compute Workloads to collect Oracle metrics
  include_tasks:
    file: create_db_user.yml
  # Run for single-instance setup or for the primary in multi-node Data Guard setup.
  # For standby setup, install-oracle.sh generates the [primary] group in the inventory file.
  when:
    - oracle_metrics_secret | length > 0
    - "groups['primary'] is not defined"

- name: Copy workload-agent's configuration file to the database VM
  template:
    src: "configuration.json.j2"
    dest: "/etc/google-cloud-workload-agent/configuration.json"
    owner: root
    group: root
    mode: u=rw,go=r
  when: oracle_metrics_secret | length > 0
  notify: Restart workload-agent
  tags: workload-agent
